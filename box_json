{
  "id": "com.demo.gauge",
  "version": "1.0.0",
  "name": "Demo Gauge",
  "description": "A customizable gauge widget for SAC",
  "newInstancePrefix": "Gauge",
  "icon": "https://example.demo/box/icon.png",
  "vendor": "Cleber Dev",
  "license": "MIT",
  "eula": "https://example.demo/eula",
  "categories": ["KPI", "Gauge", "Visualization"],
  "tags": ["performance", "indicator", "custom", "widget", "SAC"],
  "webcomponents": [
    {
      "kind": "main",
      "tag": "com-demo-gauge",
      "url": "https://example.demo/box/box.js",
      "integrity": "",
      "ignoreIntegrity": true
    },
    {
      "kind": "styling",
      "tag": "com-demo-gauge-sps",
      "url": "https://example.demo/box/box_sps.js",
      "integrity": "",
      "ignoreIntegrity": true
    }
  ],
  "properties": {
    "value": {
      "type": "number",
      "description": "Gauge value (0–100)",
      "default": 0
    },
    "info": {
      "type": "string",
      "description": "Label or description",
      "default": ""
    },
    "color": {
      "type": "string",
      "description": "Gauge color (hex or CSS name)",
      "default": "#3498db"
    },
    "width": {
      "type": "integer",
      "description": "Widget width in pixels",
      "default": 100
    },
    "height": {
      "type": "integer",
      "description": "Widget height in pixels",
      "default": 100
    }
  },
  "methods": {
    "setValue": {
      "description": "Sets the gauge value, label, and color",
      "parameters": [
        {
          "name": "newValue",
          "type": "number",
          "description": "Gauge value (0–100)"
        },
        {
          "name": "newInfo",
          "type": "string",
          "description": "Label or description"
        },
        {
          "name": "newColor",
          "type": "string",
          "description": "Gauge color"
        }
      ],
      "body": "this.value = newValue; this.info = newInfo; this.color = newColor;"
    },
    "getValue": {
      "returnType": "number",
      "description": "Returns the current gauge value",
      "body": "return this.value;"
    }
  },
  "events": {
    "onClick": {
      "description": "Triggered when the user clicks the gauge"
    }
  }
}
